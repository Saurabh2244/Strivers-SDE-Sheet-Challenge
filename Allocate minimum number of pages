class Solution 
{
    public:
    bool isPossible(int A[],int N,int M,int mid){
        int studentCount=1;
        int pageSum=0;
        
        for(int i=0;i<N;i++){
            if(pageSum+A[i]<=mid){
                pageSum+=A[i];
            }
            else{
                studentCount++;
                if(studentCount>M || A[i]>mid){
                    return false;
                }
                else{
                    pageSum=A[i];
                }
            }
        }
        return true;
    }
    
    public:
    //Function to find minimum number of pages.
    int findPages(int A[], int N, int M) 
    {
        //code here
        if(N<M){
            return -1;
        }
        int start=0;
        int sum=0;
        for(int i=0;i<N;i++){
            sum+=A[i];
        }
        int end=sum;
        int mid=start+(end-start)/2;
        int ans=-1;
        while(start<=end){
            if(isPossible(A,N,M,mid)){
                ans=mid;
                end=mid-1;
            }
            else{
                start=mid+1;
            }
            mid=start+(end-start)/2;
        }
        return ans;
    }
};
