/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
int getLength(ListNode *head){
    int len=0;
    while(head!=NULL){
        len++;
        head=head->next;
    }
    return len;
}
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int len1=getLength(headA);
        int len2=getLength(headB);

        int diff=abs(len1-len2);
        if(len1>len2){
            while(diff--){
                headA=headA->next;
            }
        }
        else{
            while(diff--){
                headB=headB->next;
            }
        }

        while(headA!=NULL && headB!=NULL){
            if(headA==headB){
                return headA;
            }
            headA=headA->next;
            headB=headB->next;
        }

        return NULL;
    }
};
